CONFIG_PREBOOT=|
env set BBTargs "sd usb nvme sata emmc"; 
env set BBDevnums "0 1 2 3 5"; 
env set BBPartnums "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64"; 
env set BBEnvFound "0"; 
env set ScanForBBEnv "
for thisdevtype in '${BBTargs}' ; do 
	if test '${BBEnvFound}' = 0; then 
		for thisdevnum in '${BBDevnums}'; do 
			if test '${BBEnvFound}' = 0; then 
				for thispartnum in '${BBPartnums}'; do 
					if test '${BBEnvFound}' = 0; then 
						if test '${thisdevtype}' = nvme; then pci enum; nvme scan; fi; 
						if test '${thisdevtype}' = usb; then usb start; fi; 
						echo '"BoughBoot: testing for ${thisdevtype} ${thisdevnum}:${thispartnum} /BBEnv.txt"'; 
						if test -e '${thisdevtype}' '${thisdevnum}':'${thispartnum}' /BBEnv.txt; then 
							echo '"BoughBoot: found /BBEnv.txt at ${thisdevtype} ${thisdevnum} on partition ${thispartnum}"'; 
							env set BBEnvDevType '"${thisdevtype}"'; 
							env set BBEnvDevNum '"${thisdevnum}"'; 
							env set BBEnvPartNum '"${thispartnum}"'; 
							part type '${BBEnvDevType}' '${BBEnvDevNum}':'${BBEnvPartNum}' BBEnvPartType; 
							load '${BBEnvDevType}' '${BBEnvDevNum}':'${BBEnvPartNum}' '${scriptaddr}' /BBEnv.txt; 
							setenv BBEnvFileSize '${filesize}'; 
							if env import -t '${scriptaddr}' '${BBEnvFileSize}'; then 
								echo '"BoughBoot: successfully read /BoughBootEnv.txt into memaddr ${scriptaddr} size is ${BBEnvFileSize}"'; 
								echo '"BoughBoot: setting BBEnvFound"';
								env set BBEnvFound '"1"'; 
								echo '"BoughBoot: BBEnvFound should be set"'; 	
							else; 
								echo '"BoughBoot: failed to read /BBEnv.txt into memaddr ${scriptaddr} size is ${BBEnvFileSize}"'; 
								exit 1; 
							fi; 
						fi; 
					fi; 
				done; 
			fi; 
		done; 
	fi; 
done; 
"; 
env set NextBootFromBBEnv "
echo '"BoughBoot: testing if BBEnvFound is 1"';
if test '${BBEnvFound}' = 1; then 
	echo '"BoughBoot: BBEnvFound is 1"';
	if test '${NBnow}' = 0; then 
		echo '"BoughBoot: NBnow is 0"';
		echo '"BoughBoot: we booted another os last time, lets go back to defaultboot, Ignoring NextBoot..."'; 
	else;
		echo '"BoughBoot: NBnow is 1"';
		if test '${NBSticky}' = 0; then 
			echo '"BoughBoot: NBSticky is 0"';
			echo '"BoughBoot: avoid bootloop, ignore next NextBoot..."'; 
			setenv NBnow 0; 
			echo '"BoughBoot: NBnow set to 0, exporting vars"';
			env export -t '${scriptaddr}' boot_targets BBEnvDevType BBEnvDevNum BBEnvPartNum NBnow NBSticky NBDevType NBDevNum NBPartNum NBBootPrefix DBDevType DBDevNum DBPartNum DBExtlinuxConfFullPath; 
			echo '"BoughBoot: vars should be exported to ${scriptaddr}"';
			echo '"BoughBoot: saving to ${BBEnvDevType} ${BBEnvDevNum}:${BBEnvPartNum}/BBEnv.txt"';
			save '${BBEnvDevType}' '${BBEnvDevNum}':'${BBEnvPartNum}' '${scriptaddr}' /BBEnv.txt; 
			echo '"BoughBoot: vars should be saved"';
		fi; 
		for NBBootPrefixTest in / /boot/ /boot/BB/ /BB/ /BoughBoot/ '${NBBootPrefix}'; do 
			if test -e '${NBDevType}' '${NBDevNum}':'${NBPartNum}' '${NBBootPrefixTest}'BBextlinux.conf; then 
				echo '"BoughBoot: trying to boot ${NBDevType} ${NBDevNum}:${NBPartNum} ${NBBootPrefixTest}BBextlinux.conf"';
				sysboot '${NBDevType}' '${NBDevNum}':'${NBPartNum}' '${NBBootPrefixTest}'BBextlinux.conf; 
			fi; 
		done; 
		fi; 
	fi; 
fi; 
echo '"BoughBoot: no NextBoot or failed, lets try defaultboot"'; 
sysboot '${DBDevType}' '${DBDevNum}':'${DBPartNum}' '${DBExtlinuxConfFullPath}'; 
echo '"BoughBoot: no DefaultBoot or failed, lets go back to BoughBoot"'; 
sysboot '${BBEnvDevType}' '${BBEnvDevNum}':'${BBEnvPartNum}' any '${scriptaddr}' /extlinux/extlinux.conf; 
echo '"BoughBoot: well, an attempt was made. just boot normaly..."'; 
";
|
